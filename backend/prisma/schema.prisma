// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Match {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  redTeam   Team     @relation("RedTeam", fields: [redTeamId], references: [id])
  redTeamId String   @unique

  blueTeam  Team     @relation("BlueTeam", fields: [blueTeamId], references: [id])
  blueTeamId String   @unique
}

model Team {
  id      String   @id @default(uuid())
  name    String
  score   Int      @default(0)

  // üîÅ Ces deux relations permettent √† la Team d‚Äô√™tre utilis√©e soit comme redTeam soit comme blueTeam
  redMatch   Match?  @relation("RedTeam")
  blueMatch  Match?  @relation("BlueTeam")

  users   User[]
}

model User {
  id           String   @id @default(uuid())
  username     String   @unique
  passwordHash String
  score        Int      @default(0)
  createdAt    DateTime @default(now())

  team         Team?    @relation(fields: [teamId], references: [id])
  teamId       String?

  role         UserRole @default(USER)
}

enum UserRole {
  USER
  ADMIN
  BANNED
}